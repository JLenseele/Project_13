# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  python: circleci/python@2.1.1
  heroku: circleci/heroku@2.0.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:

  build-and-test:
    executor: python/default
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: pytest
      - run:
          name: Linting
          command: flake8

  build-image_dockerhub:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: docker build -t docker-oc-lettings:0.1 .
      - run:
          name: Login to DockerHub
          command: docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASSWORD
      - run:
          name: Link to DockerHub
          command: docker tag docker-oc-lettings:0.1 $DOCKERHUB_USERNAME/oc-lettings-site:$CIRCLE_SHA1
      - run:
          name: push Docker image
          command: docker push $DOCKERHUB_USERNAME/oc-lettings-site:$CIRCLE_SHA1

  deploy:
    executor: heroku/default
    steps:
      - attach_workspace:
          at: ~/project
      - heroku/deploy-via-git:
          force: true


# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build_test_deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test
